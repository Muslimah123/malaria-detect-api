
version: '3.8'

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: malaria-api
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    volumes:
       - ./uploads:/app/uploads
       - ./models:/app/models
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-5000}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-malaria_detection}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
      - JWT_EXPIRY=${JWT_EXPIRY:-1d}
      - YOLO_API_URL=${YOLO_API_URL:-https://example.com/api/v1/analyze}
      - YOLO_API_KEY=${YOLO_API_KEY:-your_api_key}
    depends_on:
      - postgres
    networks:
      - malaria-network

  # PostgreSQL Service
  postgres:
    image: postgres:14-alpine
    container_name: malaria-postgres
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/db.sql
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_NAME:-malaria_detection}
    networks:
      - malaria-network

  # PgAdmin Service (optional for dev environment)
  pgadmin:
    image: dpage/pgadmin4
    container_name: malaria-pgadmin
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - malaria-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  malaria-network:
    driver: bridge